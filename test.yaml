apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: jwt-claim-extraction
  namespace: default
spec:
  workloadSelector:
    labels:
      app: your-app
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 8080
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inlineCode: |
              function envoy_on_request(request_handle)
                local auth_header = request_handle:headers():get("Authorization")
                if auth_header then
                  local jwt = auth_header:match("Bearer%s+(.+)")
                  if jwt then
                    -- Decoding and parsing JWT would require additional code or a library
                    -- Placeholder for parsing JWT claims like `sub` claim.
                    local claim = decode_jwt(jwt, "sub")
                    request_handle:logInfo("User Claim: " .. (claim or "not found"))
                  end
                end
              end
